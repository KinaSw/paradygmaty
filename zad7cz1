//Biorąc pod uwagę tablicę liczb całkowitych nums posortowaną w porządku niemalejącym, usuń duplikaty w miejscu, tak aby każdy unikalny element pojawił się tylko raz. 
//Względna kolejność elementów powinna pozostać taka sama. Następnie zwróć liczbę unikalnych elementów w nums.
//Rozważmy, że liczba unikalnych elementów numswynosi k, aby uzyskać akceptację, należy wykonać następujące czynności:
//Zmienić tablicę numsw taki sposób, aby pierwsze k elementów nums zawierało unikalne elementy w kolejności, w jakiej były one początkowo obecne w nums. Pozostałe elementy nums nie mają znaczenia, podobnie jak rozmiar nums.
//Zwraca k.
//Przykład:
//Input: nums = [1,1,2]
//Output: 2, nums = [1,2,_]
//Wyjaśnienie: Twoja funkcja powinna zwrócić k = 2, przy czym pierwsze dwa elementy nums to odpowiednio 1 i 2. Nie ma znaczenia, co pozostawisz poza zwróconym k (dlatego są to podkreślenia).

function removeDuplicates(nums) {
if (nums.length === 0) return 0;

let i = 0; // wskaźnik na ostatni unikalny element

for (let j = 1; j < nums.length; j++) {
if (nums[j] !== nums[i]) {
i++;
nums[i] = nums[j];
}
}

return i + 1; // liczba unikalnych elementów
}

// Przykład
const nums = [1, 1, 2];
const k = removeDuplicates(nums);

console.log("k =", k); // 2
console.log("zmodyfikowana tablica:", nums.slice(0, k)); // [1, 2]
